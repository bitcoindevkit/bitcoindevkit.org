searchState.loadedDescShard("bdk_core", 0, "This crate is a collection of core structures for [Bitcoin …\nA reference to a block in the canonical chain.\nA checkpoint is a node of a reference-counted linked list …\nIterates over checkpoints backwards.\nRepresents the confirmation block and time of a …\nA tuple of keychain index and <code>T</code> representing the indexed …\nA tuple of keychain <code>K</code>, derivation index (<code>u32</code>) and a <code>T</code> …\nTrait that makes an object mergeable.\nData object used to communicate updates about relevant …\nTransaction anchors. Anchors tells us a position in the …\nGet the <code>BlockId</code> of the checkpoint.\nThe anchor block.\nThe confirmation time of the transaction being anchored.\nThis method tests for <code>self</code> and <code>other</code> to have equal …\nExtends the checkpoint linked list by a iterator of block …\nExtend this update with <code>other</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstruct a checkpoint from a list of <code>BlockId</code>s in …\nConstruct a checkpoint from the given <code>header</code> and block …\nGet checkpoint at <code>height</code>.\nGet the block hash of the checkpoint.\nThe hash of the block.\nGet the height of the checkpoint.\nThe height of the block.\nInserts <code>block_id</code> at its height within the chain.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether the structure is considered empty.\nIterate from this checkpoint in descending height.\nTransforms the <code>TxUpdate</code> to have <code>anchors</code> (<code>A</code>) of another …\nMerge another object of the same type onto <code>self</code>.\nConstruct a new base block at the front of a linked list.\nGet the previous checkpoint in the chain\nPuts another checkpoint onto the linked list representing …\nIterate checkpoints over a height range.\nSeen at times for transactions. This records when a …\nHelper types for spk-based blockchain clients.\nTake the value, replacing it with the default value.\nTake the value, replacing it with the default value.\nFloating txouts. These are <code>TxOut</code>s that exist but the whole …\nFull transactions. These are transactions that were …\nData required to perform a spk-based blockchain client …\nBuilds a <code>FullScanRequest</code>.\nData returned from a spk-based blockchain client full scan.\nOutpoint sync item.\nScript pubkey sync item.\nAn item reported to the <code>inspect</code> closure of <code>SyncRequest</code>.\nThe progress of <code>SyncRequest</code>.\nData required to perform a spk-based blockchain client …\nBuilds a <code>SyncRequest</code>.\nData returned from a spk-based blockchain client sync.\nTxid sync item.\nBuild the <code>SyncRequest</code>.\nBuild the <code>FullScanRequest</code>.\nStart building a <code>SyncRequest</code>.\nStart building a <code>FullScanRequest</code>.\nSet the initial chain tip for the sync request.\nGet the chain tip <code>CheckPoint</code> of this request (if any).\nSet the initial chain tip for the full scan request.\nGet the chain tip <code>CheckPoint</code> of this request (if any).\nChanges to the chain discovered during the scan.\nChanges to the chain discovered during the scan.\nTotal consumed items of the request.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSet the closure that will inspect every sync item visited.\nSet the closure that will inspect every sync item visited.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIterate over <code>OutPoint</code>s contained in this request.\nIterate over <code>ScriptBuf</code>s contained in this request.\nIterate over indexed <code>ScriptBuf</code>s contained in this request …\nIterate over <code>Txid</code>s contained in this request.\nList all keychains contained in this request.\nLast active indices for the corresponding keychains (<code>K</code>). …\nAdvances the sync request and returns the next <code>OutPoint</code>.\nAdvances the sync request and returns the next <code>ScriptBuf</code>.\nAdvances the full scan request and returns the next …\nAdvances the sync request and returns the next <code>Txid</code>.\nAdd <code>OutPoint</code>s that will be synced against.\nOutpoints consumed by the request.\nOutpoints remaining in the request.\nGet the <code>SyncProgress</code> of this request.\nTotal remaining items of the request.\nAdd <code>Script</code>s that will be synced against.\nScript pubkeys consumed by the request.\nSet the spk iterator for a given <code>keychain</code>.\nScript pubkeys remaining in the request.\nAdd <code>Script</code>s coupled with associated indexes that will be …\nTotal items, consumed and remaining, of the request.\nTotal outpoints, consumed and remaining, of the request.\nTotal script pubkeys, consumed and remaining, of the …\nTotal txids, consumed and remaining, of the request.\nRelevant transaction data discovered during the scan.\nRelevant transaction data discovered during the scan.\nAdd <code>Txid</code>s that will be synced against.\nTxids consumed by the request.\nTxids remaining in the request.")