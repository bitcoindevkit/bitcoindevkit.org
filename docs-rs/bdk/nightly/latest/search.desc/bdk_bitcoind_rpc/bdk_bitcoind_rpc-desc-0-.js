searchState.loadedDescShard("bdk_bitcoind_rpc", 0, "This crate is used for emitting blockchain data from the …\nExtends <code>bitcoincore_rpc::Error</code>.\nA newly emitted block from <code>Emitter</code>.\nThe <code>Emitter</code> is used to emit data sourced from …\nCompact block filters sync over RPC. For more details …\nEither a full <code>Block</code> or <code>Header</code> of the new block.\nThe block hash of this new block.\nThe block height of this new block.\nThe checkpoint of the new block.\nThe <code>BlockId</code> of a previous block that this block connects …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether the error is a “not found” error.\nEmit mempool transactions, alongside their first-seen unix …\nConstruct a new <code>Emitter</code>.\nEmit the next block height and block (if any).\nEmit the next block height and header (if any).\nbitcoin bip158 error\nBlock\nErrors that may occur during a compact filters sync.\nKind of event produced by <code>FilterIter</code>.\nEvent inner type\nType that generates block <code>Event</code>s by matching a list of …\nNo match\nattempted to scan blocks without any script pubkeys\n<code>bitcoincore_rpc</code> error\nAdd spk to the list of spks to scan with.\nExtends <code>self</code> with an iterator of spks.\nBlock\nReturns a chain update from the newly scanned blocks.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the remote tip.\nGet the height of this event.\nHeight\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether this event contains a matching block.\nConstruct <code>FilterIter</code> from a given <code>client</code> and <code>CheckPoint</code>.\nConstruct <code>FilterIter</code> from a given <code>client</code> and start <code>height</code>.")